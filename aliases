# cd shortcuts
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"
alias czsrc="cd $COZY_PROJECTS_DIR"
alias cssrc="cd $COSTAR_PROJECTS_DIR"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
else # OS X `ls`
  colorflag="-G"
fi

alias ls="ls ${colorflag}"
alias l="ls"
alias ll="ls -lh ${colorflag}"
alias la="ls -lAh ${colorflag}"

# git aliases
alias g='git'
alias gs='git status'
alias gup='git pull --rebase --prune'
alias gupr='for dir in ./*; do (echo "\n$dir" && cd "$dir" && gup); done'
alias ga='git add'
alias gm='git merge'

# knife aliases
alias k="knife"
alias ks='knife status'
alias ksr="knife status -r"
alias ksg="knife status | grep"
alias kr="knife role"
alias ke="knife environment"
alias keff="knife environment from file"
alias kd="knife data bag"
alias kcu="knife cookbook upload"
kcuf() { knife cookbook upload $@ --freeze }
dbagshow() { knife data bag show $@ -Fj }
edbagshow() { knife data bag show $@ -Fj --secret-file $COZY_PROJECTS_DIR/secret_data_bags/encrypted_data_bag_secret }

# terraform aliases
alias tf='terraform'
alias tss='tf state show'

# asst'd commands
eval "$(hub alias -s)"

alias browser="python -m webbrowser -t"

# reup sts creds (requires auth2aws utility)
alias auth2awsrenew='for r in $(auth2aws --listroles); do auth2aws --login --role $r; done'

# start/stop commands for cozy/costar
function start-costar {
    stop-cozy

    brew services start postgresql
    brew services start memcached
    brew services start rabbitmq
    brew services list
}
function stop-costar {
    brew services stop postgresql
    brew services stop memcached
    brew services stop rabbitmq
}
function stop-cozy {
    cwd=$(pwd)
    cd $COZY_PROJECTS_DIR/cozy-dev
    make stop
    cd $cwd
}
function start-cozy {
    stop-costar

    cwd=$(pwd)
    cd $COZY_PROJECTS_DIR/cozy-dev
    make start
    cd $cwd
}

# Use curl to make a nicer ping, useful for quickly monitoring a service
curlping () {
  while true; do curl -sf -m3 $@ > /dev/null && echo -n '.' || echo -n 'F'; sleep 1; done
}

# ping short output
sping () {
  while true; do ping -ot 1 $@ > /dev/null && echo -n '.' || echo -n 'F'; sleep 1; done;
}
